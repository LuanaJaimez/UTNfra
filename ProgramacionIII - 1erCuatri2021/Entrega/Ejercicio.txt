CLASE 05

Administración de bases de datos.
Mysqli - PHP

Tarea para entregar:

*-CREAR BASE DE DATOS -> USUARIOS_TEST
*-CREAR TABLAS:
*--USUARIOS (ID{NUMERICO - PK - UNSIGNED - AUTOINC.}; CORREO{CADENA VAR.[50] - NO NULL};
CLAVE{CADENA VAR.[8] - NO NULL}; NOMBRE{CADENA VAR.[30] - NO NULL};
PERFIL{NUMERICO - UNSIGNED - NO NULL})
*--PERFILES (ID{NUMERICO - PK - UNSIGNED - AUTOINC.}; DESCRIPCION{CADENA VAR.[50]})

*-AGREGAR DATOS (MANUALMENTE - NO POR CODIGO)
*--USUARIOS:
-----------------------------------------------------------------------------------------------------------
ID | CORREO | CLAVE | NOMBRE | PERFIL |
-----------------------------------------------------------------------------------------------------------
1 |admin@admin.com| admin123 | juan | 1 |
2 |emple@emple.com| emple123 | pedro | 2 |
3 |emp02@emple.com| emple002 | maria | 2 |
-----------------------------------------------------------------------------------------------------------
PERFILES
-----------------------------------------
ID | DESCRIPCION |
-----------------------------------------
1 | administrador |
2 | empleado |
3 | supervisor |
-----------------------------------------

*-CREAR PAGINA .PHP QUE RECIBA COMO PARAMETROS (POST)
*--OPCION, CORREO Y CLAVE
*---SI OPCION = 'LOGIN' => SE CONECTA CON LA BD Y VERIFICA EXISTENCIA DEL USUARIO.
*--->>>SI USUARIO NO COINCIDE => INFORMARLO, CASO CONTRARIO MOSTRAR: NOMBRE Y PERFIL (DESCRIPCION)
*---SI OPCION = 'MOSTRAR' => MOSTRARA EL LISTADO COMPLETO DE LOS USUARIOS
(ID, CORREO, CLAVE, NOMBRE, PERFIL (CODIGO) Y PERFIL (DESCRIPCION))

*-UNA VEZ TESTEADO EN EL ENTORNO LOCAL, SUBIR BASE Y PAGINA AL HOST REMOTO.
*-VERIFICAR EL BUEN FUNCIONAMIENTO (RETOCAR DE SER NECESARIO).
*-PUBLICAR LA URL DEL HOST PARA SER TESTEADO POR EL PROFESOR.


CLASE 06

PDO

Tarea para entregar:


*-Tomando como base el ejercicio de la clase anterior, generar una nueva versión (*), que reemplace todo lo que está con Myslqli por su equivalente en PDO.

(*) Ejemplo: si nuestra página es: login.php, generar la nueva versión con la página: login_pdo.php.

*-AGREGAR ABM SOBRE LOS USUARIOS. 
*-- *-ALTA-> RECIBE UN JSON (OBJ_JSON) CON TODOS LOS NUEVOS DATOS.
*-- *-MODIFICACION-> RECIBE UN ID Y UN JSON (OBJ_JSON). EL ID CORRESPONDE AL REGISTRO A SER MODIFICADO, MIENTRAS QUE EL JSON TENDRÁ LOS DATOS NUEVOS DE ESE REGISTRO.
*-- *-BAJA-> RECIBE EL ID DEL REGISTRO A SER BORRADO.
*-UNA VEZ TESTEADO EN EL ENTORNO LOCAL, SUBIR LA PAGINA NUEVA (_PDO) AL HOST REMOTO.
*-VERIFICAR EL BUEN FUNCIONAMIENTO (RETOCAR DE SER NECESARIO).
*-PUBLICAR LA URL DEL HOST PARA SER TESTEADO POR EL PROFESOR.